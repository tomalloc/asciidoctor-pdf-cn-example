<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.asciidoctor</groupId>
	<artifactId>asciidoctorj-pdf-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>asciidoctor-pdf-cn-example</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<asciidoctorj.version>1.5.5</asciidoctorj.version>
		<asciidoctorj-pdf.version>1.5.0-alpha.15</asciidoctorj-pdf.version>
		<jruby.version>9.1.8.0</jruby.version>

		<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc
		</asciidoctor.input.directory>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc
		</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html
		</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf
		</asciidoctor.pdf.output.directory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctorj.version}</version>
				<!-- Include Asciidoctor PDF for pdf generation -->
				<dependencies>
					<!-- Comment this section to use the default jruby artifact provided by the plugin -->
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>
					<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>${asciidoctorj-pdf.version}</version>
					</dependency>

				</dependencies>
				<!-- Configure generic document generation settings -->
				<configuration>
					<gemPath>${project.build.directory}/gems-provided</gemPath>
					<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
					<sourceDocumentName>README-zh_CN.adoc</sourceDocumentName>
					<attributes>
						<doctype>book</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered></numbered>
						<hardbreaks></hardbreaks>
						<sectlinks></sectlinks>
						<sectanchors></sectanchors>
						<generated>${generated.asciidoc.directory}</generated>
					</attributes>
				</configuration>
				<!-- Since each execution can only handle one backend, run
                     separate executions for each desired output type -->
				<executions>
					<execution>
						<id>output-html</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<sourceHighlighter>rouge</sourceHighlighter>
							<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>output-pdf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<!--The valid options are coderay, highlightjs, prettify, and pygments.-->
							<sourceHighlighter>coderay</sourceHighlighter>
							<outputDirectory>${asciidoctor.pdf.output.directory}
							</outputDirectory>
							<attributes>
								<allow-uri-read/>
								<icons>font</icons>
								<pagenums/>
								<toc/>
								<idprefix/>
								<idseparator>-</idseparator>
								<pdf-style>wqy</pdf-style>
								<pdf-stylesdir>${project.basedir}/src/docs/themes</pdf-stylesdir>
								<pdf-fontsdir>${project.basedir}/src/docs/fonts</pdf-fontsdir>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
